from driver_config import make_driver
from get_card_urls import get_urls, encode_url
from deep_card_info import card_info
import json
import os


def find_category_file(categories):
    """–ò—â–µ—Ç —Ñ–∞–π–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ categories"""
    directory = "categories"  # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å JSON-—Ñ–∞–π–ª–∞–º–∏

    for filename in os.listdir(directory):
        if filename.endswith(".json"):
            filepath = os.path.join(directory, filename)
            try:
                with open(filepath, "r", encoding="utf-8") as file:
                    data = json.load(file)
                    if categories in data.values():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª–µ
                        return os.path.splitext(filename)[0]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ .json
            except (json.JSONDecodeError, FileNotFoundError):
                print(f"‚ö† –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {filename}")

    return None  # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ


def run(thread):
    """–ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"""

    with open(r"config.json", "r", encoding="utf-8") as file:
        config = json.load(file)

    ##### –ù–ê–°–¢–†–û–ô–ö–ò –ó–ê–ü–†–û–°–ê #####
    city = config["city"]
    user_response = config["user_response"]
    categories = config['categories']
    keywords = config["keywords"]
    black_list = config["black_list"]
    max_page = config["max_page"]
    min_price = config["min_price"]
    max_price = config["max_price"]
    deep_search = config["deep_search"]
    send_tg = config["send_tg"]
    update = config["update"]
    pause = config["pause"]
    requests_pause = config["requests_pause"]
    category_file = find_category_file(categories)
    if send_tg:
        try:
            tg_token, chat_id = config["telegram_bot_token"].split('::')[0], config["telegram_bot_token"].split('::')[1]
        except:
            tg_token, chat_id = None, None
    else:
        tg_token, chat_id = None, None
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    headless = config.get("headless", False)
    proxies_value = config["proxy"]
    print(f'–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n{"‚ú®" * 20}'
          f'\nüìç –ì–æ—Ä–æ–¥: {city}'
          f'\nüîç –ó–∞–ø—Ä–æ—Å: {user_response}'
          f'\nüõí –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category_file if category_file else "–ù–µ —É–∫–∞–∑–∞–Ω—ã"}'
          f'\nüîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {", ".join(keywords) if keywords else "–ù–µ —É–∫–∞–∑–∞–Ω—ã"}'
          f'\nüîê –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫: {", ".join(black_list) if black_list else "–ù–µ —É–∫–∞–∑–∞–Ω—ã"}'
          f'\nüìÑ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {max_page}'
          f'\nüí∞ –¶–µ–Ω–∞: –æ—Ç {min_price}‚ÇΩ –¥–æ {max_price}‚ÇΩ'
          f'\nüõ†Ô∏è –ì–ª—É–±–æ–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥: {"–í–∫–ª—é—á–µ–Ω" if deep_search else "–í—ã–∫–ª—é—á–µ–Ω"}'
          f'\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram: {"–í–∫–ª—é—á–µ–Ω–∞" if send_tg else "–í—ã–∫–ª—é—á–µ–Ω–∞"}'
          f'\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: {"–í–∫–ª—é—á–µ–Ω—ã" if update else "–í—ã–∫–ª—é—á–µ–Ω—ã"}'
          f'\nüì° –ü—Ä–æ–∫—Å–∏: {proxies_value if proxies_value else "–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"}'
          f'\nüñ•Ô∏è –†–µ–∂–∏–º –±—Ä–∞—É–∑–µ—Ä–∞: {"–ë–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (headless)" if headless else "–° –æ—Ç–∫—Ä—ã—Ç—ã–º –æ–∫–Ω–æ–º"}'
          )

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –ø–∞—É–∑—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ `update=True`
    if update:
        print(f'‚è≥ –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏: {pause} —Å–µ–∫—É–Ω–¥')
    if requests_pause:
        print(f'‚è≥ –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏: {requests_pause} —Å–µ–∫—É–Ω–¥')

    print(f'{"‚ú®" * 20}\n\n')

    encode_user_response = encode_url(text=user_response)

    driver = make_driver(headless=headless, proxies_value=proxies_value)

    while thread.running:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞–∂–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "–°—Ç–æ–ø"
        is_get_urls = get_urls(thread, driver, categories=categories, city=city, max_page=max_page,
                               response=encode_user_response,
                               black_list=black_list, keywords=keywords, min_price=min_price, max_price=max_price, tg_token=tg_token,
                               chat_id=chat_id,
                               update=update, pause=pause, requests_pause=requests_pause)

        if is_get_urls or not thread.running:
            break  # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ —Å—Å—ã–ª–∫–∏ –∏–ª–∏ –Ω–∞–∂–∞–ª–∏ "–°—Ç–æ–ø" ‚Äî –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
        else:
            # print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞...')
            break

    if thread.running and deep_search:
        card_info(thread, driver, total_urls=is_get_urls, tg_token=tg_token, chat_id=chat_id, requests_pause=requests_pause)  # –ü–µ—Ä–µ–¥–∞—ë–º thread!

    print('\n–ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!')
    driver.close()
    driver.quit()
